{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\bperemateu\\\\Desktop\\\\Brian\\\\Tecnicatura\\\\Segundo\\\\2do Cuatri\\\\5. Seminario 1\\\\TP-Bot\\\\it-bot\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\bperemateu\\\\Desktop\\\\Brian\\\\Tecnicatura\\\\Segundo\\\\2do Cuatri\\\\5. Seminario 1\\\\TP-Bot\\\\it-bot\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\bperemateu\\\\Desktop\\\\Brian\\\\Tecnicatura\\\\Segundo\\\\2do Cuatri\\\\5. Seminario 1\\\\TP-Bot\\\\it-bot\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\bperemateu\\\\Desktop\\\\Brian\\\\Tecnicatura\\\\Segundo\\\\2do Cuatri\\\\5. Seminario 1\\\\TP-Bot\\\\it-bot\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\bperemateu\\\\Desktop\\\\Brian\\\\Tecnicatura\\\\Segundo\\\\2do Cuatri\\\\5. Seminario 1\\\\TP-Bot\\\\it-bot\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\bperemateu\\\\Desktop\\\\Brian\\\\Tecnicatura\\\\Segundo\\\\2do Cuatri\\\\5. Seminario 1\\\\TP-Bot\\\\it-bot\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\bperemateu\\\\Desktop\\\\Brian\\\\Tecnicatura\\\\Segundo\\\\2do Cuatri\\\\5. Seminario 1\\\\TP-Bot\\\\it-bot\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Pusher from 'pusher-js';\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.handleChange = function (event) {\n      _this.setState({\n        userMessage: event.target.value\n      });\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n      if (!_this.state.userMessage.trim()) return;\n      var msg = {\n        text: _this.state.userMessage,\n        user: 'human'\n      };\n\n      _this.setState({\n        conversation: _toConsumableArray(_this.state.conversation).concat([msg])\n      });\n\n      fetch('http://localhost:5000/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: _this.state.userMessage\n        })\n      });\n\n      _this.setState({\n        userMessage: ''\n      });\n    };\n\n    _this.state = {\n      userMessage: '',\n      conversation: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var pusher = new Pusher('26b32dcde869d5c661b0', {\n        cluster: 'us2',\n        encrypted: true\n      });\n      var channel = pusher.subscribe('bot');\n      channel.bind('bot-response', function (data) {\n        var msg = {\n          text: data.message,\n          user: 'ai'\n        };\n\n        _this2.setState({\n          conversation: _toConsumableArray(_this2.state.conversation).concat([msg])\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var ChatBubble = function ChatBubble(text, i, className) {\n        return React.createElement(\"div\", {\n          key: \"\".concat(className, \"-\").concat(i),\n          className: \"\".concat(className, \" chat-bubble\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"chat-content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, text));\n      };\n\n      var chat = this.state.conversation.map(function (e, index) {\n        return ChatBubble(e.text, index, e.user);\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"React Chatbot\"), React.createElement(\"div\", {\n        className: \"chat-window\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"conversation-view\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, chat), React.createElement(\"div\", {\n        className: \"message-box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        value: this.state.userMessage,\n        onInput: this.handleChange,\n        className: \"text-input\",\n        type: \"text\",\n        autoFocus: true,\n        placeholder: \"Type your message and hit Enter to send\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\bperemateu\\Desktop\\Brian\\Tecnicatura\\Segundo\\2do Cuatri\\5. Seminario 1\\TP-Bot\\it-bot\\src\\App.js"],"names":["React","Component","Pusher","App","props","handleChange","event","setState","userMessage","target","value","handleSubmit","preventDefault","state","trim","msg","text","user","conversation","fetch","method","headers","body","JSON","stringify","message","pusher","cluster","encrypted","channel","subscribe","bind","data","ChatBubble","i","className","chat","map","e","index"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n    import Pusher from 'pusher-js';\n    import './App.css';\n\n    class App extends Component {\n      constructor(props) {\n        super(props);\n        this.state = {\n          userMessage: '',\n          conversation: [],\n        };\n      }\n\n      componentDidMount() {\n        const pusher = new Pusher('26b32dcde869d5c661b0', {\n          cluster: 'us2',\n          encrypted: true,\n        });\n\n        const channel = pusher.subscribe('bot');\n        channel.bind('bot-response', data => {\n          const msg = {\n            text: data.message,\n            user: 'ai',\n          };\n          this.setState({\n            conversation: [...this.state.conversation, msg],\n          });\n        });\n      }\n\n      handleChange = event => {\n        this.setState({ userMessage: event.target.value });\n      };\n\n      handleSubmit = event => {\n        event.preventDefault();\n        if (!this.state.userMessage.trim()) return;\n\n        const msg = {\n          text: this.state.userMessage,\n          user: 'human',\n        };\n\n        this.setState({\n          conversation: [...this.state.conversation, msg],\n        });\n\n        fetch('http://localhost:5000/chat', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            message: this.state.userMessage,\n          }),\n        });\n\n        this.setState({ userMessage: '' });\n      };\n\n      render() {\n        const ChatBubble = (text, i, className) => {\n          return (\n            <div key={`${className}-${i}`} className={`${className} chat-bubble`}>\n              <span className=\"chat-content\">{text}</span>\n            </div>\n          );\n        };\n\n        const chat = this.state.conversation.map((e, index) =>\n          ChatBubble(e.text, index, e.user)\n        );\n\n        return (\n          <div>\n            <h1>React Chatbot</h1>\n            <div className=\"chat-window\">\n              <div className=\"conversation-view\">{chat}</div>\n              <div className=\"message-box\">\n                <form onSubmit={this.handleSubmit}>\n                  <input\n                    value={this.state.userMessage}\n                    onInput={this.handleChange}\n                    className=\"text-input\"\n                    type=\"text\"\n                    autoFocus\n                    placeholder=\"Type your message and hit Enter to send\"\n                  />\n                </form>\n              </div>\n            </div>\n          </div>\n        );\n      }\n    }\n\n    export default App;\n"]},"metadata":{},"sourceType":"module"}